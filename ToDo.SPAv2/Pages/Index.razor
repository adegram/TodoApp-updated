@page "/"
@inject ToDoViewModel _viewModel
@using ToDo.SPAv2.ViewModels.TodoViewModels
@using ToDo.SPAv2.DataModel.Todos.Enum

<div class="container m-5 p-2 rounded mx-auto bg-light shadow">
    <!-- App title section -->
    <div class="row m-1 p-4">
        <div class="col">
            <div class="p-1 h1 text-primary text-center mx-auto display-inline-block">
                <i class="fa fa-check bg-primary text-white rounded p-2"></i>
                <u>My Todo-s</u>
            </div>
        </div>
    </div>
    <!-- Create todo section -->
    <div class="row m-1 p-3">
        <div class="col col-11 mx-auto">
            <div class="row bg-white rounded shadow-sm p-2 add-todo-wrapper align-items-center justify-content-center">
                <div class="col">
                    <InputText @bind-Value="_viewModel.TodoCreate.Title" class="form-control form-control-lg border-0 add-todo-input bg-transparent rounded" type="text" placeholder="Add new ..." style="text-decoration: underline;"/>
                </div>
                <div class="col-auto m-0 px-2 d-flex align-items-center">
                    <InputDate @bind-Value="_viewModel.TodoCreate.Deadline" style="border-radius: 5px; border-color: #0D6EFD; padding: 5px;"/>
                </div>
                <div class="col-auto px-0 mx-0 mr-2">
                    <button @onclick="_viewModel.AddNewTodo" type="button" class="btn btn-primary">Add</button>
                </div>
            </div>
        </div>
    </div>
    <div class="p-2 mx-4 border-black-25 border-bottom"></div>
    <!-- View options section -->
    <div class="row m-1 p-3 px-5 justify-content-end">
        <div class="col-auto d-flex align-items-center">
            <label class="text-secondary my-2 pr-2 view-opt-label">Filter:</label>
            <InputSelect @bind-Value="@(_viewModel.FilterStatus)" class="custom-select custom-select-sm btn my-2">
                <option value="@ToDoStatus.None">All</option>
                <option value="@ToDoStatus.Finished">Finished</option>
                <option value="@ToDoStatus.ToDo">To do</option>
            </InputSelect>
        </div>
        <div class="col-auto d-flex align-items-center px-1 pr-3">
            <label class="text-secondary my-2 pr-2 view-opt-label">Sort:</label>
            <InputSelect @bind-Value="_viewModel.FilterByDate" class="custom-select custom-select-sm btn my-2">
                <option value="0" selected>All</option>
                <option value="1" selected>Added date</option>
                <option value="2">Deadline</option>
            </InputSelect>
            <div class="col-auto px-0 mx-0 mx-2 ">
                <button @onclick="_viewModel.FilterTodos" type="button" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </div>
    <!-- Todo list section -->
    <div class="row mx-1 px-5 pb-3 w-80">
        <div class="col mx-auto">
            <!-- Todo Item 1 -->
            @foreach (var todo in _viewModel.Todos)
            {
                <div class="row px-3 align-items-center todo-item rounded">

                    @if (!todo.IsEditMode)
                    {
                        <div class="col px-1 m-1 d-flex align-items-center">
                            <InputCheckbox @bind-Value="@todo.IsFinished" @onclick="() => _viewModel.ChangeStatus(!todo.IsFinished, todo)" style="width: 20px;"/>
                            <p id="#" class="id-item">ID @todo.Id</p>
                            <input type="text" class="form-control form-control-lg border-0 edit-todo-input rounded px-3 d-none" value="Renew car insurance"/>
                            @if (todo.Status == ToDoStatus.Finished)
                            {
                                <input type="text" class="form-control form-control-lg border-0 edit-todo-input bg-transparent rounded px-3" readonly value="@todo.Title" style="text-decoration: line-through;"/>
                            }
                            else
                            {
                                <input type="text" class="form-control form-control-lg border-0 edit-todo-input bg-transparent rounded px-3" readonly value="@todo.Title" style="text-decoration: underline;"/>
                            }
                        </div>
                        <div class="col-auto m-1 p-0 todo-actions">
                            <div class="todo-del-cre">
                                <h5>
                                    <i @onclick="() => _viewModel.StartEdit(true, todo)" class="fa fa-pencil text-info btn m-0 p-0" data-toggle="tooltip" data-placement="bottom" title="Edit todo"></i>
                                </h5>
                                <h5>
                                    <svg @onclick="() => _viewModel.DeleteTodo(todo.Id)" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16" style="color: red;">
                                        <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"/>
                                    </svg>
                                </h5>
                            </div>
                            <div class="row todo-created-info">
                                <div class="col-auto d-flex align-items-center pr-2">
                                    @if (todo.Deadline is not null)
                                    {
                                        <i class="fa fa-info-circle my-2 px-2 text-black-50 btn" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Created date"></i>
                                        <label class="date-label my-2 text-black-50">@todo.Deadline.Value.ToString("MM/dd/yyyy")</label>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col px-1 m-1 d-flex align-items-center">
                            <p id="#" class="id-item">ID 2</p>
                            <input type="text" class="form-control form-control-lg border-0 edit-todo-input bg-transparent rounded px-3 d-none" readonly value="@todo.Title" title="Sign up for online course"/>
                            <InputText type="text" @bind-Value="todo.Title" class="form-control form-control-lg border-0 edit-todo-input rounded px-3"/>
                        </div>
                        <div class="col-auto m-1 p-0 px-3 d-none">
                        </div>
                        <div class="col-auto m-1 p-0 px-3">
                            <div class="todo-edit">
                                <div class="row">
                                    <div class="col-auto d-flex align-items-center rounded bg-white border border-warning">
                                        <i class="fa fa-hourglass-2 my-2 px-2 text-warning btn" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Due on date"></i>
                                        <InputDate id="selectedDate" @bind-Value="@todo.Deadline" class="col-auto d-flex align-items-center rounded bg-white border border-warning"/>
                                    </div>
                                </div>
                                <svg @onclick="() => _viewModel.UpdateRodo(todo)" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus-square btn_save" viewBox="0 0 16 16"> 
                                    <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/> 
                                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/> 
                                </svg>
                            </div>
                            
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code{

    protected override async Task OnInitializedAsync()
    {
        await _viewModel.OnInitializedAsync();
    }

}